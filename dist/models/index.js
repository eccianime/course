"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Section = exports.Content = exports.ContentsUsers = exports.Instructor = exports.Brand = exports.User = exports.Enroll = exports.Course = void 0;
const course_1 = __importDefault(require("./course"));
exports.Course = course_1.default;
const courses_instructors_1 = __importDefault(require("./courses_instructors"));
const brand_1 = __importDefault(require("./brand"));
exports.Brand = brand_1.default;
const enroll_1 = __importDefault(require("./enroll"));
exports.Enroll = enroll_1.default;
const user_1 = __importDefault(require("./user"));
exports.User = user_1.default;
const instructor_1 = __importDefault(require("./instructor"));
exports.Instructor = instructor_1.default;
const section_1 = __importDefault(require("./section"));
exports.Section = section_1.default;
const content_1 = __importDefault(require("./content"));
exports.Content = content_1.default;
const contents_users_1 = __importDefault(require("./contents_users"));
exports.ContentsUsers = contents_users_1.default;
user_1.default.hasMany(enroll_1.default, { foreignKey: 'user_id' });
enroll_1.default.belongsTo(user_1.default, { foreignKey: 'user_id' });
course_1.default.hasMany(enroll_1.default, { foreignKey: 'course_id' });
enroll_1.default.belongsTo(course_1.default, { foreignKey: 'course_id' });
brand_1.default.hasMany(user_1.default, { foreignKey: 'brand_id' });
user_1.default.belongsTo(brand_1.default, { foreignKey: 'brand_id' });
course_1.default.belongsToMany(instructor_1.default, { through: courses_instructors_1.default, foreignKey: 'course_id' });
instructor_1.default.belongsToMany(course_1.default, { through: courses_instructors_1.default, foreignKey: 'instructor_id' });
course_1.default.hasMany(section_1.default, { foreignKey: 'course_id' });
section_1.default.belongsTo(course_1.default, { foreignKey: 'course_id' });
section_1.default.hasMany(content_1.default, { foreignKey: 'section_id' });
content_1.default.belongsTo(section_1.default, { foreignKey: 'section_id' });
content_1.default.hasMany(contents_users_1.default, { foreignKey: 'content_id' });
contents_users_1.default.belongsTo(content_1.default, { foreignKey: 'content_id' });
